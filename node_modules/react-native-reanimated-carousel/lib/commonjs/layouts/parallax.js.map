{"version":3,"sources":["parallax.ts"],"names":["parallaxLayout","baseConfig","modeConfig","size","vertical","parallaxScrollingOffset","parallaxScrollingScale","value","translate","zIndex","Extrapolate","CLAMP","scale","Math","pow","transform","translateY","translateX","interpolate"],"mappings":"+FAAA,8DA6BO,QAASA,CAAAA,cAAT,CACHC,UADG,CAGL,IADEC,CAAAA,UACF,2DAD8B,EAC9B,CACE,GAAQC,CAAAA,IAAR,CAA2BF,UAA3B,CAAQE,IAAR,CAAcC,QAAd,CAA2BH,UAA3B,CAAcG,QAAd,CACA,0BACIF,UADJ,CAAQG,uBAAR,CAAQA,uBAAR,gCAAkC,GAAlC,8CACIH,UADJ,CAAuCI,sBAAvC,CAAuCA,sBAAvC,iCAAgE,GAAhE,wBAGA,qCAAQC,KAAR,CAA0B,CAEtB,GAAMC,CAAAA,SAAS,CAAG,uCACdD,KADc,CAEd,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAFc,CAGd,CAAC,CAACJ,IAAD,CAAQE,uBAAT,CAAkC,CAAlC,CAAqCF,IAAI,CAAGE,uBAA5C,CAHc,CAAlB,CAMA,GAAMI,CAAAA,MAAM,CAAG,uCACXF,KADW,CAEX,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAFW,CAGX,CAAC,CAAD,CAAIJ,IAAJ,CAAU,CAAV,CAHW,CAIXO,mCAAYC,KAJD,CAAf,CAOA,GAAMC,CAAAA,KAAK,CAAG,uCACVL,KADU,CAEV,CAAC,CAAC,CAAF,CAAK,CAAL,CAAQ,CAAR,CAFU,CAGV,CACIM,IAAI,CAACC,GAAL,CAASR,sBAAT,CAAiC,CAAjC,CADJ,CAEIA,sBAFJ,CAGIO,IAAI,CAACC,GAAL,CAASR,sBAAT,CAAiC,CAAjC,CAHJ,CAHU,CAQVI,mCAAYC,KARF,CAAd,CAWA,MAAO,CACHI,SAAS,CAAE,CACPX,QAAQ,CACF,CACIY,UAAU,CAAER,SADhB,CADE,CAIF,CACIS,UAAU,CAAET,SADhB,CALC,CAQP,CACII,KAAK,CAALA,KADJ,CARO,CADR,CAaHH,MAAM,CAANA,MAbG,CAAP,CAeH,CAzCD,0BAjCYS,kCAiCZ,MAlCgDf,IAkChD,yBAnC2FE,uBAmC3F,oBAjC+IK,mCAAYC,KAiC3J,yBAjCkHL,sBAiClH,UA/BYF,QA+BZ,6vBA0CH","sourcesContent":["import { Extrapolate, interpolate } from 'react-native-reanimated';\nimport type { ComputedDirectionTypes } from '../types';\n\ntype TBaseConfig = {\n    size: number;\n    vertical: boolean;\n};\n\ninterface ILayoutConfig {\n    /**\n     * When use default Layout props,this prop can be control prev/next item offset.\n     * @default 100\n     */\n    parallaxScrollingOffset?: number;\n    /**\n     * When use default Layout props,this prop can be control prev/next item offset.\n     * @default 0.8\n     */\n    parallaxScrollingScale?: number;\n}\n\nexport type TParallaxModeProps = ComputedDirectionTypes<{\n    /**\n     * Carousel Animated transitions.\n     */\n    mode?: 'parallax';\n    modeConfig?: ILayoutConfig;\n}>;\n\nexport function parallaxLayout(\n    baseConfig: TBaseConfig,\n    modeConfig: ILayoutConfig = {}\n) {\n    const { size, vertical } = baseConfig;\n    const { parallaxScrollingOffset = 100, parallaxScrollingScale = 0.8 } =\n        modeConfig;\n\n    return (value: number) => {\n        'worklet';\n        const translate = interpolate(\n            value,\n            [-1, 0, 1],\n            [-size + parallaxScrollingOffset, 0, size - parallaxScrollingOffset]\n        );\n\n        const zIndex = interpolate(\n            value,\n            [-1, 0, 1],\n            [0, size, 0],\n            Extrapolate.CLAMP\n        );\n\n        const scale = interpolate(\n            value,\n            [-1, 0, 1],\n            [\n                Math.pow(parallaxScrollingScale, 2),\n                parallaxScrollingScale,\n                Math.pow(parallaxScrollingScale, 2),\n            ],\n            Extrapolate.CLAMP\n        );\n\n        return {\n            transform: [\n                vertical\n                    ? {\n                          translateY: translate,\n                      }\n                    : {\n                          translateX: translate,\n                      },\n                {\n                    scale,\n                },\n            ],\n            zIndex,\n        };\n    };\n}\n"]}